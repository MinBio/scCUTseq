import glob, os

configfile: "config.yaml"

indir=config['indir']
outdir=config['outdir']
binsize=config['binsize']
hmmutil=config['hmmutil']
chroms=config['chroms']
ref=config['ref']

# Get samples
samples = [os.path.basename(x) for x in glob.glob(indir + "*bam")]

rule all:
	input:
		expand(outdir + "readcounts/{binsize}kb/reads-{sample}.wig",
			sample = samples, binsize = binsize),
		expand("/mnt/AchTeraD/Documents/references/mappability/{ref}-mappability_{binsize}kb.wig",
			ref = ref, binsize = binsize),
		expand("/mnt/AchTeraD/Documents/references/gc_content/{ref}-gc_{binsize}kb.wig",
			ref = ref, binsize = binsize)

rule getMappability:
	input:
		config['mappability']
	output:
		"/mnt/AchTeraD/Documents/references/mappability/{ref}-mappability_{binsize}kb.wig"
	params:
		chroms=",".join(chroms),
		binsize=int(int(binsize) * 1e3)
	shell:
		"""
		{hmmutil}mapCounter -w {params.binsize} -c {params.chroms} {input} > \
		{output}
		"""

rule getGC:
	input:
		config['reference']
	output:
		"/mnt/AchTeraD/Documents/references/gc_content/{ref}-gc_{binsize}kb.wig"
	params:
		chroms=",".join(chroms),
		binsize=int(int(binsize) * 1e3)
	shell:
		"""
		{hmmutil}gcCounter -w {params.binsize} -c {params.chroms} {input} > \
		{output}
		"""

rule getReads:
	input:
		indir + "{sample}"
	output:
		outdir + "readcounts/{binsize}kb/reads-{sample}.wig"
	params:
		chroms=",".join(chroms),
		binsize=int(int(binsize) * 1e3)
	shell:
		"""
		{hmmutil}readCounter -w {params.binsize} -c {params.chroms} {input} > \
		{output}
		"""
